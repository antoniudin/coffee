{"ast":null,"code":"var _jsxFileName = \"/Users/main/reactredux/src/Login.js\";\nimport React, { Component } from 'react';\nimport Button from './navigation/Button';\nimport NavBar from './navigation/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Messages extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      id: 1,\n      animate: false,\n      messages: [{\n        id: 1,\n        active: false,\n        title: \"Who uses Random Cofffee?\",\n        content: \"Anyone who feels lonely. Writers, programmers, nonprofits, cosplayers, you name it. More than 500,000 people and millions of aliens are on Random Cofffee.\"\n      }, {\n        id: 2,\n        active: false,\n        title: \"Is there a fee to use Random Cofffee??\",\n        content: \"We do not charge a monthly fee. All features including publishing and emails are free for everyone. We charge a 5% transaction fee, and creators keep 95% of the earnings. We make money only when you do. We'll never show ads and we'll never sell your data.\"\n      }, {\n        id: 3,\n        active: false,\n        title: \"Is it a real service?\",\n        content: \"I don't think so. But it doesn't mean you can't sing up fo free\"\n      }]\n    };\n\n    this.addClass = id => {\n      const message = this.state.messages.find(message => message.id == id);\n      message.active = !message.active;\n      this.setState({\n        message\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      animate,\n      messages,\n      id\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => this.addClass(message.id),\n            className: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"titleText\",\n              children: message.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: message.active ? 'anime iconSquare' : 'iconSquare'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), message.active && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `line ${message.active ? 'lineAnima' : null}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Messages;","map":{"version":3,"sources":["/Users/main/reactredux/src/Login.js"],"names":["React","Component","Button","NavBar","Messages","state","id","animate","messages","active","title","content","addClass","message","find","setState","componentDidMount","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BI,KAD+B,GACvB;AACNC,MAAAA,EAAE,EAAC,CADG;AAENC,MAAAA,OAAO,EAAC,KAFF;AAGNC,MAAAA,QAAQ,EAAE,CACR;AACEF,QAAAA,EAAE,EAAC,CADL;AAEEG,QAAAA,MAAM,EAAC,KAFT;AAGEC,QAAAA,KAAK,EAAC,0BAHR;AAIEC,QAAAA,OAAO,EAAC;AAJV,OADQ,EAOR;AACEL,QAAAA,EAAE,EAAC,CADL;AAEEG,QAAAA,MAAM,EAAC,KAFT;AAGEC,QAAAA,KAAK,EAAC,wCAHR;AAIEC,QAAAA,OAAO,EAAC;AAJV,OAPQ,EAaR;AACEL,QAAAA,EAAE,EAAC,CADL;AAEEG,QAAAA,MAAM,EAAC,KAFT;AAGEC,QAAAA,KAAK,EAAC,uBAHR;AAIEC,QAAAA,OAAO,EAAC;AAJV,OAbQ;AAHJ,KADuB;;AAAA,SA4B/BC,QA5B+B,GA4BnBN,EAAD,IAAQ;AACjB,YAAMO,OAAO,GAAG,KAAKR,KAAL,CAAWG,QAAX,CAAoBM,IAApB,CAAyBD,OAAO,IAAGA,OAAO,CAACP,EAAR,IAAYA,EAA/C,CAAhB;AACAO,MAAAA,OAAO,CAACJ,MAAR,GAAe,CAACI,OAAO,CAACJ,MAAxB;AACA,WAAKM,QAAL,CAAc;AAACF,QAAAA;AAAD,OAAd;AACD,KAhC8B;AAAA;;AAoC/BG,EAAAA,iBAAiB,GAAG,CAEnB;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACV,MAAAA,OAAD;AAASC,MAAAA,QAAT;AAAkBF,MAAAA;AAAlB,QAAwB,KAAKD,KAAnC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAGA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACGG,QAAQ,CAACU,GAAT,CAAaL,OAAO,iBACnB;AAAsB,UAAA,SAAS,EAAC,KAAhC;AAAA,kCACA;AAAK,YAAA,OAAO,EAAE,MAAI,KAAKD,QAAL,CAAcC,OAAO,CAACP,EAAtB,CAAlB;AAA6C,YAAA,SAAS,EAAC,OAAvD;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,wBAA4BO,OAAO,CAACH;AAApC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAEG,OAAO,CAACJ,MAAR,GAAiB,kBAAjB,GAAsC;AAAtD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAKCI,OAAO,CAACJ,MAAR,iBAAkB;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,sBAA0BI,OAAO,CAACF;AAAlC;AAAA;AAAA;AAAA;AAAA,kBALnB,eAOA;AAAK,YAAA,SAAS,EAAG,QAAOE,OAAO,CAACJ,MAAR,GAAiB,WAAjB,GAA+B,IAAK;AAA5D;AAAA;AAAA;AAAA;AAAA,kBAPA;AAAA,WAAUI,OAAO,CAACP,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AA9D8B;;AAiEjC,eAAeF,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from './navigation/Button';\nimport NavBar from './navigation/NavBar';\n\nclass Messages extends Component {\n  state = {  \n    id:1,\n    animate:false,\n    messages: [\n      {\n        id:1,\n        active:false,\n        title:\"Who uses Random Cofffee?\",\n        content:\"Anyone who feels lonely. Writers, programmers, nonprofits, cosplayers, you name it. More than 500,000 people and millions of aliens are on Random Cofffee.\"\n      },\n      {\n        id:2,\n        active:false,\n        title:\"Is there a fee to use Random Cofffee??\",\n        content:\"We do not charge a monthly fee. All features including publishing and emails are free for everyone. We charge a 5% transaction fee, and creators keep 95% of the earnings. We make money only when you do. We'll never show ads and we'll never sell your data.\"\n      },\n      {\n        id:3,\n        active:false,\n        title:\"Is it a real service?\",\n        content:\"I don't think so. But it doesn't mean you can't sing up fo free\"\n      },\n    ]\n  } \n  \n\n\n  addClass = (id) => {\n    const message = this.state.messages.find(message=> message.id==id)\n    message.active=!message.active;\n    this.setState({message})\n  }\n\n\n\n  componentDidMount() {\n\n  }\n  \n\n  render() { \n    const {animate,messages,id} = this.state  \n    return (\n      <div className=\"page\">\n      <NavBar/>\n      \n      <div className=\"flex\">\n        {messages.map(message=> \n          <div key={message.id} className=\"box\">  \n          <div onClick={()=>this.addClass(message.id)} className=\"title\">\n            <div className=\"titleText\">{message.title}</div>\n            <div className={message.active ? 'anime iconSquare' : 'iconSquare'}></div>\n          </div>\n          {message.active && <div className=\"content\">{message.content}\n          </div>}\n          <div className={`line ${message.active ? 'lineAnima' : null}`}></div>\n        </div>     \n          )}\n      </div>\n      </div>\n    );\n  }\n}\n \nexport default Messages;"]},"metadata":{},"sourceType":"module"}